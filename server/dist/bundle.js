(()=>{var e={688:e=>{e.exports=class e{constructor(e,t,s){this.type=e,this.health=this.maxHealth=t,this.distance=this.maxDistance=s}isReadyToMove(){return this.distance>0}isReadyToFight(){return this.health>0}restore(){this.restoreHealth(),this.restoreMove()}restoreHealth(){this.health=this.maxHealth}restoreMove(){this.distance=this.maxDistance}clone(){return new e(this.type,this.health,this.distance)}}},834:e=>{e.exports=class e{constructor(e){e&&this.combineResources(e)}isReadyToMove(){this.squad.every((e=>e.isReadyToMove()))}isReadyToFight(){this.squad.every((e=>e.isReadyToFight()))}restore(){this.restoreHealth(),this.restoreMove()}restoreHealth(){this.squad.forEach((e=>e.restoreHealth()))}restoreMove(){this.squad.forEach((e=>e.restoreMove()))}clone(){return new e(this.squad.map((e=>e.clone())))}getReadyToMoveResources(){return this.squad.map((e=>e.isReadyToMove&&e))}combineResources(e){this.squad.push(...e)}}}},t={};function s(o){if(t[o])return t[o].exports;var r=t[o]={exports:{}};return e[o](r,r.exports,s),r.exports}(()=>{const e=s(688),t=s(834);let o=new e("BTR",100,200),r=new e("Panzer",300,400),h=o.clone(),a=new t([o,r,h]);a.squad[0].health=-20,console.log(a.squad[0].health),a.clone(),o.health=-40,r.distance=0,a.restore(),console.log(a),console.log(a.isReadyToFight())})()})();